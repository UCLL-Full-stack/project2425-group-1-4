generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql" // Adjust as needed for your database
  url      = env("DATABASE_URL")
}

model User {
  id       Int       @id @default(autoincrement())
  email    String    @unique
  password String
  role     UserRole
  orders   Order[]   @relation("UserOrders")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum UserRole {
  USER
  ADMIN
}

model Product {
  id          Int            @id @default(autoincrement())
  name        String
  price       Float
  stock       Int
  color       String
  description String?
  image       Json           // Stores structured image data
  categories  Category[]     @relation("ProductCategories")
  orderItems  OrderItem[]    @relation("ProductOrderItems")
  createdAt   DateTime       @default(now())
  updatedAt   DateTime       @updatedAt
}

model Category {
  id        Int        @id @default(autoincrement())
  name      String     @unique
  products  Product[]  @relation("ProductCategories")
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

model OrderItem {
  id        Int      @id @default(autoincrement())
  quantity  Int
  price     Float
  color     String
  image     Json      // Stores structured image data
  product   Product   @relation("ProductOrderItems", fields: [productId], references: [id])
  productId Int
  order     Order     @relation(fields: [orderId], references: [id])
  orderId   Int
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Order {
  id        Int        @id @default(autoincrement())
  user      User       @relation("UserOrders", fields: [userId], references: [id])
  userId    Int
  orderItems OrderItem[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

model User {
  id       Int    @id @default(autoincrement())
  email    String @unique
  password String
  role     String
}
